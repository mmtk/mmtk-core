name: Minimal tests - mmtk-core

on:
  pull_request:
    branches:
      - master
  merge_group:
    branches:
      - master

concurrency:
  # Cancels pending runs when a PR gets updated.
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  # Setup dynamic test matrix
  setup-test-matrix:
    runs-on: ubuntu-latest
    outputs:
      rust: ${{ steps.rust.outputs.array }}
    steps:
      - uses: actions/checkout@v2
      # Get rust version
      - id: rust
        run: |
          export MSRV=`cargo read-manifest | python -c 'import json,sys; print(json.load(sys.stdin)["rust_version"])'`
          export TEST=`cat rust-toolchain`
          echo "array=[\"$MSRV\", \"$TEST\", \"stable\"]" >> $GITHUB_OUTPUT

  minimal-tests-core:
    needs: setup-test-matrix
    strategy:
      fail-fast: false
      matrix:
        target:
          - { os: ubuntu-22.04, triple: x86_64-unknown-linux-gnu }
          - { os: ubuntu-22.04, triple: i686-unknown-linux-gnu }
          - { os: macos-12, triple: x86_64-apple-darwin }
        rust: ${{ fromJson(needs.setup-test-matrix.outputs.rust )}}

    name: minimal-tests-core/${{ matrix.target.triple }}/${{ matrix.rust }}
    runs-on: ${{ matrix.target.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}-${{ matrix.target.triple }}
          components: rustfmt, clippy
          # This overwrites the default toolchain with the toolchain specified above.
          override: true

      # Setup Environments
      - name: Setup Environments
        run: ./.github/scripts/ci-setup-${{ matrix.target.triple }}.sh

      # Build
      - name: Build
        run: ./.github/scripts/ci-build.sh

      # Test
      - name: Test
        run: ./.github/scripts/ci-test.sh

      # Style checks
      - name: Style checks
        run: ./.github/scripts/ci-style.sh

      # Document check
      - name: Rustdoc
        run: ./.github/scripts/ci-doc.sh
