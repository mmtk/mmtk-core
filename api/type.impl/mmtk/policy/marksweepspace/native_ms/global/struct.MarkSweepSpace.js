(function() {var type_impls = {
"mmtk":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MarkSweepSpace%3CVM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#277-498\">source</a><a href=\"#impl-MarkSweepSpace%3CVM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;VM: <a class=\"trait\" href=\"mmtk/vm/trait.VMBinding.html\" title=\"trait mmtk::vm::VMBinding\">VMBinding</a>&gt; <a class=\"struct\" href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html\" title=\"struct mmtk::policy::marksweepspace::native_ms::global::MarkSweepSpace\">MarkSweepSpace</a>&lt;VM&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.extend_global_side_metadata_specs\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#280-283\">source</a><h4 class=\"code-header\">pub fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.extend_global_side_metadata_specs\" class=\"fn\">extend_global_side_metadata_specs</a>(_specs: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"mmtk/util/metadata/side_metadata/global/struct.SideMetadataSpec.html\" title=\"struct mmtk::util::metadata::side_metadata::global::SideMetadataSpec\">SideMetadataSpec</a>&gt;)</h4></section><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#285-330\">source</a><h4 class=\"code-header\">pub fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.new\" class=\"fn\">new</a>(args: <a class=\"struct\" href=\"mmtk/policy/space/struct.PlanCreateSpaceArgs.html\" title=\"struct mmtk::policy::space::PlanCreateSpaceArgs\">PlanCreateSpaceArgs</a>&lt;'_, VM&gt;) -&gt; <a class=\"struct\" href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html\" title=\"struct mmtk::policy::marksweepspace::native_ms::global::MarkSweepSpace\">MarkSweepSpace</a>&lt;VM&gt;</h4></section><section id=\"method.trace_object\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#332-349\">source</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.trace_object\" class=\"fn\">trace_object</a>&lt;Q: <a class=\"trait\" href=\"mmtk/plan/tracing/trait.ObjectQueue.html\" title=\"trait mmtk::plan::tracing::ObjectQueue\">ObjectQueue</a>&gt;(\n    &amp;self,\n    queue: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Q</a>,\n    object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>\n) -&gt; <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a></h4></section><section id=\"method.record_new_block\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#351-354\">source</a><h4 class=\"code-header\">pub fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.record_new_block\" class=\"fn\">record_new_block</a>(&amp;self, block: <a class=\"struct\" href=\"mmtk/policy/marksweepspace/native_ms/block/struct.Block.html\" title=\"struct mmtk::policy::marksweepspace::native_ms::block::Block\">Block</a>)</h4></section><section id=\"method.prepare\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#356-367\">source</a><h4 class=\"code-header\">pub fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.prepare\" class=\"fn\">prepare</a>(&amp;mut self)</h4></section><section id=\"method.release\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#369-380\">source</a><h4 class=\"code-header\">pub fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.release\" class=\"fn\">release</a>(&amp;mut self)</h4></section><section id=\"method.end_of_gc\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#382-387\">source</a><h4 class=\"code-header\">pub fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.end_of_gc\" class=\"fn\">end_of_gc</a>(&amp;mut self)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.release_block\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#390-395\">source</a><h4 class=\"code-header\">pub fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.release_block\" class=\"fn\">release_block</a>(&amp;self, block: <a class=\"struct\" href=\"mmtk/policy/marksweepspace/native_ms/block/struct.Block.html\" title=\"struct mmtk::policy::marksweepspace::native_ms::block::Block\">Block</a>)</h4></section></summary><div class=\"docblock\"><p>Release a block.</p>\n</div></details><section id=\"method.block_clear_metadata\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#397-403\">source</a><h4 class=\"code-header\">pub fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.block_clear_metadata\" class=\"fn\">block_clear_metadata</a>(&amp;self, block: <a class=\"struct\" href=\"mmtk/policy/marksweepspace/native_ms/block/struct.Block.html\" title=\"struct mmtk::policy::marksweepspace::native_ms::block::Block\">Block</a>)</h4></section><section id=\"method.acquire_block\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#405-433\">source</a><h4 class=\"code-header\">pub fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.acquire_block\" class=\"fn\">acquire_block</a>(\n    &amp;self,\n    tls: <a class=\"struct\" href=\"mmtk/util/opaque_pointer/struct.VMThread.html\" title=\"struct mmtk::util::opaque_pointer::VMThread\">VMThread</a>,\n    size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>,\n    align: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"mmtk/policy/marksweepspace/native_ms/global/enum.BlockAcquireResult.html\" title=\"enum mmtk::policy::marksweepspace::native_ms::global::BlockAcquireResult\">BlockAcquireResult</a></h4></section><section id=\"method.get_abandoned_block_lists\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#435-437\">source</a><h4 class=\"code-header\">pub fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.get_abandoned_block_lists\" class=\"fn\">get_abandoned_block_lists</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/std/sync/mutex/struct.Mutex.html\" title=\"struct std::sync::mutex::Mutex\">Mutex</a>&lt;<a class=\"struct\" href=\"mmtk/policy/marksweepspace/native_ms/global/struct.AbandonedBlockLists.html\" title=\"struct mmtk::policy::marksweepspace::native_ms::global::AbandonedBlockLists\">AbandonedBlockLists</a>&gt;</h4></section><section id=\"method.get_abandoned_block_lists_in_gc\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#439-441\">source</a><h4 class=\"code-header\">pub fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.get_abandoned_block_lists_in_gc\" class=\"fn\">get_abandoned_block_lists_in_gc</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/std/sync/mutex/struct.Mutex.html\" title=\"struct std::sync::mutex::Mutex\">Mutex</a>&lt;<a class=\"struct\" href=\"mmtk/policy/marksweepspace/native_ms/global/struct.AbandonedBlockLists.html\" title=\"struct mmtk::policy::marksweepspace::native_ms::global::AbandonedBlockLists\">AbandonedBlockLists</a>&gt;</h4></section><section id=\"method.release_packet_done\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#443-456\">source</a><h4 class=\"code-header\">pub fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.release_packet_done\" class=\"fn\">release_packet_done</a>(&amp;self)</h4></section><section id=\"method.generate_sweep_tasks\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#458-473\">source</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.generate_sweep_tasks\" class=\"fn\">generate_sweep_tasks</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"mmtk/scheduler/work/trait.GCWork.html\" title=\"trait mmtk::scheduler::work::GCWork\">GCWork</a>&lt;VM&gt;&gt;&gt;</h4></section><section id=\"method.recycle_blocks\" class=\"method\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#475-497\">source</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html#tymethod.recycle_blocks\" class=\"fn\">recycle_blocks</a>(&amp;self)</h4></section></div></details>",0,"mmtk::plan::marksweep::global::MarkSweepSpace"],["<section id=\"impl-Sync-for-MarkSweepSpace%3CVM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#89\">source</a><a href=\"#impl-Sync-for-MarkSweepSpace%3CVM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;VM: <a class=\"trait\" href=\"mmtk/vm/trait.VMBinding.html\" title=\"trait mmtk::vm::VMBinding\">VMBinding</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html\" title=\"struct mmtk::policy::marksweepspace::native_ms::global::MarkSweepSpace\">MarkSweepSpace</a>&lt;VM&gt;</h3></section>","Sync","mmtk::plan::marksweep::global::MarkSweepSpace"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PolicyTraceObject%3CVM%3E-for-MarkSweepSpace%3CVM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#257-271\">source</a><a href=\"#impl-PolicyTraceObject%3CVM%3E-for-MarkSweepSpace%3CVM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;VM: <a class=\"trait\" href=\"mmtk/vm/trait.VMBinding.html\" title=\"trait mmtk::vm::VMBinding\">VMBinding</a>&gt; <a class=\"trait\" href=\"mmtk/policy/gc_work/trait.PolicyTraceObject.html\" title=\"trait mmtk::policy::gc_work::PolicyTraceObject\">PolicyTraceObject</a>&lt;VM&gt; for <a class=\"struct\" href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html\" title=\"struct mmtk::policy::marksweepspace::native_ms::global::MarkSweepSpace\">MarkSweepSpace</a>&lt;VM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace_object\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#258-266\">source</a><a href=\"#method.trace_object\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/gc_work/trait.PolicyTraceObject.html#tymethod.trace_object\" class=\"fn\">trace_object</a>&lt;Q: <a class=\"trait\" href=\"mmtk/plan/tracing/trait.ObjectQueue.html\" title=\"trait mmtk::plan::tracing::ObjectQueue\">ObjectQueue</a>, const KIND: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;(\n    &amp;self,\n    queue: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.reference.html\">&amp;mut Q</a>,\n    object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>,\n    _copy: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"mmtk/util/copy/enum.CopySemantics.html\" title=\"enum mmtk::util::copy::CopySemantics\">CopySemantics</a>&gt;,\n    _worker: &amp;mut <a class=\"struct\" href=\"mmtk/scheduler/worker/struct.GCWorker.html\" title=\"struct mmtk::scheduler::worker::GCWorker\">GCWorker</a>&lt;VM&gt;\n) -&gt; <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a></h4></section></summary><div class='docblock'>Trace object in the policy. If the policy copies objects, we should\nexpect <code>copy</code> to be a <code>Some</code> value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.may_move_objects\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#268-270\">source</a><a href=\"#method.may_move_objects\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/gc_work/trait.PolicyTraceObject.html#tymethod.may_move_objects\" class=\"fn\">may_move_objects</a>&lt;const KIND: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.u8.html\">u8</a>&gt;() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Return whether the policy moves objects.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.post_scan_object\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/gc_work.rs.html#34-36\">source</a><a href=\"#method.post_scan_object\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/gc_work/trait.PolicyTraceObject.html#method.post_scan_object\" class=\"fn\">post_scan_object</a>(&amp;self, _object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>)</h4></section></summary><div class='docblock'>Policy-specific post-scan-object hook.  It is called after scanning\neach object in this space.</div></details></div></details>","PolicyTraceObject<VM>","mmtk::plan::marksweep::global::MarkSweepSpace"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SFT-for-MarkSweepSpace%3CVM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#159-221\">source</a><a href=\"#impl-SFT-for-MarkSweepSpace%3CVM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;VM: <a class=\"trait\" href=\"mmtk/vm/trait.VMBinding.html\" title=\"trait mmtk::vm::VMBinding\">VMBinding</a>&gt; <a class=\"trait\" href=\"mmtk/policy/sft/trait.SFT.html\" title=\"trait mmtk::policy::sft::SFT\">SFT</a> for <a class=\"struct\" href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html\" title=\"struct mmtk::policy::marksweepspace::native_ms::global::MarkSweepSpace\">MarkSweepSpace</a>&lt;VM&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#160-162\">source</a><a href=\"#method.name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#tymethod.name\" class=\"fn\">name</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The space name</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_live\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#164-166\">source</a><a href=\"#method.is_live\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#tymethod.is_live\" class=\"fn\">is_live</a>(&amp;self, object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is the object live, determined by the policy?</div></details><section id=\"method.pin_object\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#169-171\">source</a><a href=\"#method.pin_object\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#tymethod.pin_object\" class=\"fn\">pin_object</a>(&amp;self, _object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.unpin_object\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#174-176\">source</a><a href=\"#method.unpin_object\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#tymethod.unpin_object\" class=\"fn\">unpin_object</a>(&amp;self, _object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.is_object_pinned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#179-181\">source</a><a href=\"#method.is_object_pinned\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#tymethod.is_object_pinned\" class=\"fn\">is_object_pinned</a>(&amp;self, _object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_movable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#183-185\">source</a><a href=\"#method.is_movable\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#tymethod.is_movable\" class=\"fn\">is_movable</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is the object movable, determined by the policy? E.g. the policy is non-moving,\nor the object is pinned.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_sane\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#188-190\">source</a><a href=\"#method.is_sane\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#tymethod.is_sane\" class=\"fn\">is_sane</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is the object sane? A policy should return false if there is any abnormality about\nobject - the sanity checker will fail if an object is not sane.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.initialize_object_metadata\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#192-195\">source</a><a href=\"#method.initialize_object_metadata\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#tymethod.initialize_object_metadata\" class=\"fn\">initialize_object_metadata</a>(&amp;self, _object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>, _alloc: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>Initialize object metadata (in the header, or in the side metadata).</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_mmtk_object\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#198-200\">source</a><a href=\"#method.is_mmtk_object\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#tymethod.is_mmtk_object\" class=\"fn\">is_mmtk_object</a>(&amp;self, addr: <a class=\"struct\" href=\"mmtk/util/address/struct.Address.html\" title=\"struct mmtk::util::address::Address\">Address</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>&gt;</h4></section></summary><div class='docblock'>Is <code>addr</code> a valid object reference to an object allocated in this space?\nThis default implementation works for all spaces that use MMTkโs mapper to allocate memory.\nSome spaces, like <code>MallocSpace</code>, use third-party libraries to allocate memory.\nSuch spaces needs to override this method.</div></details><section id=\"method.find_object_from_internal_pointer\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#203-211\">source</a><a href=\"#method.find_object_from_internal_pointer\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#tymethod.find_object_from_internal_pointer\" class=\"fn\">find_object_from_internal_pointer</a>(\n    &amp;self,\n    ptr: <a class=\"struct\" href=\"mmtk/util/address/struct.Address.html\" title=\"struct mmtk::util::address::Address\">Address</a>,\n    max_search_bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.sft_trace_object\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#213-220\">source</a><a href=\"#method.sft_trace_object\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#tymethod.sft_trace_object\" class=\"fn\">sft_trace_object</a>(\n    &amp;self,\n    queue: &amp;mut <a class=\"type\" href=\"mmtk/plan/tracing/type.VectorObjectQueue.html\" title=\"type mmtk::plan::tracing::VectorObjectQueue\">VectorObjectQueue</a>,\n    object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>,\n    _worker: <a class=\"struct\" href=\"mmtk/policy/sft/struct.GCWorkerMutRef.html\" title=\"struct mmtk::policy::sft::GCWorkerMutRef\">GCWorkerMutRef</a>&lt;'_&gt;\n) -&gt; <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a></h4></section></summary><div class='docblock'>Trace objects through SFT. This along with <a href=\"mmtk/scheduler/gc_work/SFTProcessEdges\"><code>SFTProcessEdges</code></a>\nprovides an easy way for most plans to trace objects without the need to implement any plan-specific\ncode. However, tracing objects for some policies are more complicated, and they do not provide an\nimplementation of this method. For example, mark compact space requires trace twice in each GC.\nImmix has defrag trace and fast trace.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_forwarded_object\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/sft.rs.html#30-32\">source</a><a href=\"#method.get_forwarded_object\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#method.get_forwarded_object\" class=\"fn\">get_forwarded_object</a>(\n    &amp;self,\n    _object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>&gt;</h4></section></summary><div class='docblock'>Get forwarding pointer if the object is forwarded.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_reachable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/sft.rs.html#39-41\">source</a><a href=\"#method.is_reachable\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#method.is_reachable\" class=\"fn\">is_reachable</a>(&amp;self, object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is the object reachable, determined by the policy?\nNote: Objects in ImmortalSpace may have <code>is_live = true</code> but are actually unreachable.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_in_space\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/sft.rs.html#70-72\">source</a><a href=\"#method.is_in_space\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/sft/trait.SFT.html#method.is_in_space\" class=\"fn\">is_in_space</a>(&amp;self, _object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Is the object managed by MMTk? For most cases, if we find the sft for an object, that means\nthe object is in the space and managed by MMTk. However, for some spaces, like MallocSpace,\nwe mark the entire chunk in the SFT table as a malloc space, but only some of the addresses\nin the space contain actual MMTk objects. So they need a further check.</div></details></div></details>","SFT","mmtk::plan::marksweep::global::MarkSweepSpace"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Space%3CVM%3E-for-MarkSweepSpace%3CVM%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#223-255\">source</a><a href=\"#impl-Space%3CVM%3E-for-MarkSweepSpace%3CVM%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;VM: <a class=\"trait\" href=\"mmtk/vm/trait.VMBinding.html\" title=\"trait mmtk::vm::VMBinding\">VMBinding</a>&gt; <a class=\"trait\" href=\"mmtk/policy/space/trait.Space.html\" title=\"trait mmtk::policy::space::Space\">Space</a>&lt;VM&gt; for <a class=\"struct\" href=\"mmtk/policy/marksweepspace/native_ms/global/struct.MarkSweepSpace.html\" title=\"struct mmtk::policy::marksweepspace::native_ms::global::MarkSweepSpace\">MarkSweepSpace</a>&lt;VM&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.as_space\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#224-226\">source</a><a href=\"#method.as_space\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#tymethod.as_space\" class=\"fn\">as_space</a>(&amp;self) -&gt; &amp;dyn <a class=\"trait\" href=\"mmtk/policy/space/trait.Space.html\" title=\"trait mmtk::policy::space::Space\">Space</a>&lt;VM&gt;</h4></section><section id=\"method.as_sft\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#228-230\">source</a><a href=\"#method.as_sft\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#tymethod.as_sft\" class=\"fn\">as_sft</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"mmtk/policy/sft/trait.SFT.html\" title=\"trait mmtk::policy::sft::SFT\">SFT</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static)</h4></section><section id=\"method.get_page_resource\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#232-234\">source</a><a href=\"#method.get_page_resource\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#tymethod.get_page_resource\" class=\"fn\">get_page_resource</a>(&amp;self) -&gt; &amp;dyn <a class=\"trait\" href=\"mmtk/util/heap/pageresource/trait.PageResource.html\" title=\"trait mmtk::util::heap::pageresource::PageResource\">PageResource</a>&lt;VM&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.maybe_get_page_resource_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#236-238\">source</a><a href=\"#method.maybe_get_page_resource_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#tymethod.maybe_get_page_resource_mut\" class=\"fn\">maybe_get_page_resource_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut dyn <a class=\"trait\" href=\"mmtk/util/heap/pageresource/trait.PageResource.html\" title=\"trait mmtk::util::heap::pageresource::PageResource\">PageResource</a>&lt;VM&gt;&gt;</h4></section></summary><div class='docblock'>Get a mutable reference to the underlying page resource, or <code>None</code> if the space does not\nhave a page resource.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.initialize_sft\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#240-242\">source</a><a href=\"#method.initialize_sft\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#tymethod.initialize_sft\" class=\"fn\">initialize_sft</a>(&amp;self, sft_map: &amp;mut dyn <a class=\"trait\" href=\"mmtk/policy/sft_map/trait.SFTMap.html\" title=\"trait mmtk::policy::sft_map::SFTMap\">SFTMap</a>)</h4></section></summary><div class='docblock'>Initialize entires in SFT map for the space. This is called when the Space object\nhas a non-moving address, as we will use the address to set sft.\nCurrently after we create a boxed plan, spaces in the plan have a non-moving address.</div></details><section id=\"method.common\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#244-246\">source</a><a href=\"#method.common\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#tymethod.common\" class=\"fn\">common</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"mmtk/policy/space/struct.CommonSpace.html\" title=\"struct mmtk::policy::space::CommonSpace\">CommonSpace</a>&lt;VM&gt;</h4></section><section id=\"method.release_multiple_pages\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#248-250\">source</a><a href=\"#method.release_multiple_pages\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#tymethod.release_multiple_pages\" class=\"fn\">release_multiple_pages</a>(&amp;mut self, _start: <a class=\"struct\" href=\"mmtk/util/address/struct.Address.html\" title=\"struct mmtk::util::address::Address\">Address</a>)</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.enumerate_objects\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/marksweepspace/native_ms/global.rs.html#252-254\">source</a><a href=\"#method.enumerate_objects\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#tymethod.enumerate_objects\" class=\"fn\">enumerate_objects</a>(&amp;self, enumerator: &amp;mut dyn <a class=\"trait\" href=\"mmtk/util/object_enum/trait.ObjectEnumerator.html\" title=\"trait mmtk::util::object_enum::ObjectEnumerator\">ObjectEnumerator</a>)</h4></section></summary><div class='docblock'>Enumerate objects in the current space. <a href=\"mmtk/policy/space/trait.Space.html#tymethod.enumerate_objects\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.will_oom_on_acquire\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/space.rs.html#70-81\">source</a><a href=\"#method.will_oom_on_acquire\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#method.will_oom_on_acquire\" class=\"fn\">will_oom_on_acquire</a>(&amp;self, tls: <a class=\"struct\" href=\"mmtk/util/opaque_pointer/struct.VMThread.html\" title=\"struct mmtk::util::opaque_pointer::VMThread\">VMThread</a>, size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A check for the obvious out-of-memory case: if the requested size is larger than\nthe heap size, it is definitely an OOM. We would like to identify that, and\nallows the binding to deal with OOM. Without this check, we will attempt\nto allocate from the page resource. If the requested size is unrealistically large\n(such as <code>usize::MAX</code>), it breaks the assumptions of our implementation of\npage resource, vm map, etc. This check prevents that, and allows us to\nhandle the OOM case.\nEach allocator that may request an arbitrary size should call this method before\nacquring memory from the space. For example, bump pointer allocator and large object\nallocator need to call this method. On the other hand, allocators that only allocate\nmemory in fixed size blocks do not need to call this method.\nAn allocator should call this method before doing any computation on the size to\navoid arithmatic overflow. If we have to do computation in the allocation fastpath and\noverflow happens there, there is nothing we can do about it.\nReturn a boolean to indicate if we will be out of memory, determined by the check.</div></details><section id=\"method.acquire\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/space.rs.html#83-234\">source</a><a href=\"#method.acquire\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#method.acquire\" class=\"fn\">acquire</a>(&amp;self, tls: <a class=\"struct\" href=\"mmtk/util/opaque_pointer/struct.VMThread.html\" title=\"struct mmtk::util::opaque_pointer::VMThread\">VMThread</a>, pages: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"mmtk/util/address/struct.Address.html\" title=\"struct mmtk::util::address::Address\">Address</a></h4></section><section id=\"method.address_in_space\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/space.rs.html#236-242\">source</a><a href=\"#method.address_in_space\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#method.address_in_space\" class=\"fn\">address_in_space</a>(&amp;self, start: <a class=\"struct\" href=\"mmtk/util/address/struct.Address.html\" title=\"struct mmtk::util::address::Address\">Address</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.in_space\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/space.rs.html#244-246\">source</a><a href=\"#method.in_space\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#method.in_space\" class=\"fn\">in_space</a>(&amp;self, object: <a class=\"struct\" href=\"mmtk/util/address/struct.ObjectReference.html\" title=\"struct mmtk::util::address::ObjectReference\">ObjectReference</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.grow_space\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/space.rs.html#257-291\">source</a><a href=\"#method.grow_space\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#method.grow_space\" class=\"fn\">grow_space</a>(&amp;self, start: <a class=\"struct\" href=\"mmtk/util/address/struct.Address.html\" title=\"struct mmtk::util::address::Address\">Address</a>, bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a>, new_chunk: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a>)</h4></section></summary><div class='docblock'>This is called after we get result from page resources.  The space may\ntap into the hook to monitor heap growth.  The call is made from within the\npage resourcesโ critical region, immediately before yielding the lock. <a href=\"mmtk/policy/space/trait.Space.html#method.grow_space\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ensure_mapped\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/space.rs.html#295-309\">source</a><a href=\"#method.ensure_mapped\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#method.ensure_mapped\" class=\"fn\">ensure_mapped</a>(&amp;self)</h4></section></summary><div class='docblock'>Ensure this space is marked as mapped โ used when the space is already\nmapped (e.g. for a vm image which is externally mmapped.)</div></details><section id=\"method.reserved_pages\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/space.rs.html#311-315\">source</a><a href=\"#method.reserved_pages\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#method.reserved_pages\" class=\"fn\">reserved_pages</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.available_physical_pages\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/space.rs.html#318-320\">source</a><a href=\"#method.available_physical_pages\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#method.available_physical_pages\" class=\"fn\">available_physical_pages</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the number of physical pages available.</div></details><section id=\"method.get_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/space.rs.html#322-324\">source</a><a href=\"#method.get_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#method.get_name\" class=\"fn\">get_name</a>(&amp;self) -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.str.html\">str</a></h4></section><section id=\"method.get_gc_trigger\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/space.rs.html#327-329\">source</a><a href=\"#method.get_gc_trigger\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#method.get_gc_trigger\" class=\"fn\">get_gc_trigger</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"mmtk/util/heap/gc_trigger/struct.GCTrigger.html\" title=\"struct mmtk::util::heap::gc_trigger::GCTrigger\">GCTrigger</a>&lt;VM&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_copy_for_sft_trace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/space.rs.html#335-337\">source</a><a href=\"#method.set_copy_for_sft_trace\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#method.set_copy_for_sft_trace\" class=\"fn\">set_copy_for_sft_trace</a>(&amp;mut self, _semantics: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"mmtk/util/copy/enum.CopySemantics.html\" title=\"enum mmtk::util::copy::CopySemantics\">CopySemantics</a>&gt;)</h4></section></summary><div class='docblock'>What copy semantic we should use for this space if we copy objects from this space.\nThis is only needed for plans that use SFTProcessEdges</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_side_metadata_sanity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/mmtk/policy/space.rs.html#348-351\">source</a><a href=\"#method.verify_side_metadata_sanity\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"mmtk/policy/space/trait.Space.html#method.verify_side_metadata_sanity\" class=\"fn\">verify_side_metadata_sanity</a>(\n    &amp;self,\n    side_metadata_sanity_checker: &amp;mut <a class=\"struct\" href=\"mmtk/util/metadata/side_metadata/sanity/struct.SideMetadataSanity.html\" title=\"struct mmtk::util::metadata::side_metadata::sanity::SideMetadataSanity\">SideMetadataSanity</a>\n)</h4></section></summary><div class='docblock'>Ensure that the current spaceโs metadata context does not have any issues.\nPanics with a suitable message if any issue is detected.\nIt also initialises the sanity maps which will then be used if the <code>extreme_assertions</code> feature is active.\nInternally this calls verify_metadata_context() from <code>util::metadata::sanity</code> <a href=\"mmtk/policy/space/trait.Space.html#method.verify_side_metadata_sanity\">Read more</a></div></details></div></details>","Space<VM>","mmtk::plan::marksweep::global::MarkSweepSpace"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()