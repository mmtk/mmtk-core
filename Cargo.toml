[package]
name = "mmtk"
version = "0.2.0"
authors = ["The MMTk Developers <>"]
edition = "2018"
license = "MIT OR Apache-2.0"
description = "MMTk is a framework for the design and implementation of high-performance and portable memory managers."
homepage = "https://www.mmtk.io"
repository = "https://github.com/mmtk/mmtk-core"
readme = "README.md"
categories = ["memory-management"]
keywords = ["gc", "garbage", "collection", "garbage-collection", "allocation"]

[lib]
name = "mmtk"
crate-type = ["rlib"]
doctest = false

[dependencies]
custom_derive = "0.1"
enum_derive = "0.1"
libc = "0.2"
jemalloc-sys = {version = "0.3.2", features = ["disable_initial_exec_tls"] }
mimalloc-sys = "0.1.6"
hoard-sys = { git = "https://git@github.com/paigereeves/hoard-sys.git", rev = "36989b877962f086267b1d21d5008c9df0fd0984" }
lazy_static = "1.1"
log = {version = "0.4", features = ["max_level_trace", "release_max_level_off"] }
crossbeam-deque = "0.6"
num_cpus = "1.8"
enum-map = "0.6.2"
downcast-rs = "1.1.1"
atomic-traits = "0.2.0"
atomic = "0.4.6"
spin = "0.5.2"
env_logger = "0.8.2"

[dev-dependencies]
crossbeam = "0.7.3"
rand = "0.7.3"

[features]
default = []

# .github/scripts/ci-common.sh extracts features from the following part (including from comments).
# So be careful when editing or adding stuff to the section below.

# Do not modify the following line - ci-common.sh matches it
# -- Non mutally exclusive features --

# spaces
base_spaces = []
vm_space = ["base_spaces"]
ro_space = ["base_spaces"]
code_space  = ["base_spaces"]

# Run sanity GC
sanity = []
# Use lock free variant of NoGC
nogc_lock_free = []
# Use lock free with no zeroing NoGC
nogc_no_zeroing = ["nogc_lock_free"]
# For using a single GC thread
# Q: Why do we need this as a compile time flat? We can always set the number of GC threads through options.
single_worker = []

# Do not modify the following line - ci-common.sh matches it
# -- Mutally exclusive features --
# Only one feature from each group can be provided. Otherwise build will fail.

# Name of the mutualy exclusive feature group. ci-common.sh matches lines like this one.
# Group:malloc
# only one of the following features should be enabled, or none to use the default malloc from libc
# this does not replace the global Rust allocator, but provides these libraries for GC implementation
malloc_mimalloc = []
malloc_jemalloc = []
malloc_hoard = []

# If there are more groups, they should be inserted above this line
# Group:end
